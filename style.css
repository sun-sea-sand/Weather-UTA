body {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;
    font-family: 'Didot', 'Optima', 'Perpetua''Times New Roman', 'Open Sans', 'serif';
    background: rgb(15, 2, 54);
    background-image: url('https://source.unsplash.com/1600x900/?landscape');
    background-size: contain;
    font-size: 120%;
    /* Responsive Font Size The text size can be set with a vw unit, which means the "viewport width". Viewport is the browser window size. 1vw=1% of viewport width. */
}

.card {
    position: relative;
    background: rgba(9, 170, 143, 0.8);
    color: white;
    opacity: 0.9;
    padding: 2em;
    border-radius: 30px;
    width: 100%;
    max-width: 520px;
    margin: 1em;
    box-shadow: 1em 1em 0.8em 0.4em rgba(0, 0, 0, 0.8);
}

.search {
    display: flex;
    align-items: center;
    justify-content: center;
}

::placeholder {
    /* Chrome, Firefox, Opera, Safari 10.1+ */
    color: white;
    opacity: 1;
    /* Firefox */
}

:-ms-input-placeholder {
    /* Internet Explorer 10-11 */
    color: white;
}

::-ms-input-placeholder {
    /* Microsoft Edge */
    color: white;
}

button {
    margin: 0.5em;
    border-radius: 50%;
    border: none;
    height: 3.5em;
    width: 3.5em;
    outline: none;
    background: #7c7c7c96;
    color: white;
    cursor: pointer;
    transition: 0.2s ease-in-out;
}

input.search-bar {
    border: none;
    outline: none;
    padding: 0.4em 1em;
    border-radius: 1em;
    background: #7c7c7c96;
    color: white;
    font-family: inherit;
    font-size: 105%;
    width: calc(100% - 100px);
    text-transform: capitalize
}

button:hover {
    background: #4b4b4bab;
}

input.search_submit {
    display: none;
}

h1.city {
    font-size: 1.3em;
}

main {
    display: -ms-flexbox;
    /* IE10 */
    display: flex;
    -ms-flex-wrap: wrap;
    /* IE10 */
    flex-wrap: wrap;
}

aside {
    -ms-flex: 50%;
    /* IE10 */
    flex: 50%;
}

#map {
    height: 220px;
    margin-bottom: 3em;
}

h2.temp {
    margin: 0;
    margin-bottom: 0.4em;
}

.descriptionbox {
    display: flex;
    display: -ms-flexbox;
    /* IE10 */
    align-items: center;
    margin-bottom: 0.3em
}

.description {
    text-transform: capitalize;
}

.humiditybox {
    display: flex;
    display: -ms-flexbox;
    /* IE10 */
    margin-bottom: 0.7em
}

.humidity {
    margin-left: 0.5em;
}

.windbox {
    display: flex;
    display: -ms-flexbox;
    /* IE10 */
    margin-bottom: 1em;
}

.wind {
    margin: 0 0.3em 0em 0.5em
}

.precbox {
    display: flex;
    display: -ms-flexbox;
    /* IE10 */
    margin-bottom: 0.7em
}

.weather.loading {
    visibility: hidden;
    max-height: 20px;
    position: relative;

}

.weather.loading:after {
    visibility: visible;
    content: "Loading...";
    color: white;
    position: absolute;
    top: 0;
    left: 20px;
}

.card-footer {
    display: flex;
    display: -ms-flexbox;
    /* IE10 */
    background-color: #001209;
    opacity: 1;
    flex-flow: row nowrap;
    align-items: center;
    position: absolute;
    bottom: 0px;
    border-radius: 1em;
    margin-bottom: 0.5em;
}

.card-footer-button {
    color: white;
    font-size: 0.9em;
    font-weight: 900;
    cursor: pointer;
    text-decoration: none;
    padding: 0.8em 2.8em;
    transition: 0.2s ease-in-out;
}

.card-footer:hover {
    box-shadow: 0em 0em 0.7em 0 #22314e;
    background: #000000;
    text-decoration: underline;
}

@media screen and (max-width: 700px) {
    main {
        display: block;
    }

    .item {
        position: relative;
    }

    article {
        justify-content: center;
        align-items: center;
    }

    h2.temp {
        text-align: center;
    }

    .card-footer {
        position: relative;
        justify-content: center;
    }

    body {
        margin-top: 2em;
        margin-bottom: 2em;
        font-size: 120%;
    }
}

.overlay_search {
    position: absolute;
    /*
    other values: static, relative, absolute, fixed.
    An element with position: fixed; is positioned relative to the viewport, which means it always stays in the same place
    even if the page is scrolled. The top, right, bottom, and left properties are used to position the element.
    An element with position: absolute; is positioned relative to the nearest positioned ancestor (instead of positioned
    relative to the viewport, like fixed). However; if an absolute positioned element has no positioned ancestors, it uses
    the document body, and moves along with page scrolling.
    */
    display: none;
    /* none. then block */
    border: none;
    margin: auto;
    border-radius: 1em;
    overflow: auto;
    /*
    other values: visible, hidden, scroll, auto.
    The auto value is similar to scroll, but it adds scrollbars only when necessaryThe auto value is similar to scroll, but
    it adds scrollbars only when necessary.
    */
    width: 70%;
    height: 50%;
    box-shadow: 0.5em 0.5em 2em 0.5em rgb(20, 19, 19);
    top: 20%;
    left: 8%;
    background-color: white;
    z-index: 2;
    transition: all 0.25s linear;

}

.text_overlaysearch {
    /*color: rgb(0, 217, 255);*/
    color: #00c;
    font-size: 0.9em;
    padding: 0.5em 1.5em;
    border-bottom: 1px solid #e9e9e9;
    display: block;
}

.text_overlaysearch:hover {
    text-decoration: underline;
    cursor: pointer;
    color: rgb(131, 36, 36);
    background-color: #6ebd95a9;
}
